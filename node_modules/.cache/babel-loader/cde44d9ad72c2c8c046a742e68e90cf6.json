{"ast":null,"code":"var _jsxFileName = \"/Users/aditikhare/Desktop/js/flickr-meme-generator/src/pagination.js\";\nimport React from 'react';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePaginationMinus = this.handlePaginationMinus.bind(this);\n    this.handlePaginationPlus = this.handlePaginationPlus.bind(this);\n    this.state = {\n      curPage: 1\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.searchChange != this.props.searchChange) {\n      this.setState({\n        curPage: 1\n      });\n    }\n  } //increment pageNum\n\n\n  handlePaginationPlus() {\n    let tempCurPage = this.state.curPage; // so don't have to rely on setState updating quick enough and so don't have to return a explicit promist\n\n    setTimeout(this.props.fetchPics, 0, this.state.curPage + 1);\n    tempCurPage++;\n    this.setState({\n      curPage: tempCurPage\n    });\n  } //decrement pageNum\n\n\n  handlePaginationMinus() {\n    let tempCurPage = this.state.curPage; // so don't have to rely on setState updating quick enough and so don't have to return a explicit promist\n\n    setTimeout(this.props.fetchPics, 0, this.state.curPage - 1);\n\n    if (tempCurPage > 1) {\n      tempCurPage--;\n    }\n\n    this.setState({\n      curPage: tempCurPage\n    });\n  }\n\n  renderPrevButton() {\n    const {\n      curPage\n    } = this.state;\n    let prevButton = [];\n\n    if (curPage > 1) {\n      prevButton.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handlePaginationMinus,\n          class: \"button bottom\",\n          children: \"go to previous page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this));\n    }\n\n    return prevButton;\n  }\n\n  render() {\n    let prevButton = this.renderPrevButton();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [prevButton, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handlePaginationPlus,\n        class: \"button bottom\",\n        children: \"go to next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPagination.propTypes = {\n  searchChange: PropTypes.bool.isRequired,\n  fetchPics: PropTypes.func.isRequired\n};\nexport default Pagination;","map":{"version":3,"sources":["/Users/aditikhare/Desktop/js/flickr-meme-generator/src/pagination.js"],"names":["React","PropTypes","Pagination","Component","constructor","props","handlePaginationMinus","bind","handlePaginationPlus","state","curPage","componentDidUpdate","prevProps","searchChange","setState","tempCurPage","setTimeout","fetchPics","renderPrevButton","prevButton","push","render","propTypes","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,qBAAL,GAA+B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAA/B;AACA,SAAKC,oBAAL,GAA6B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA7B;AAEA,SAAKE,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAIA,SAAS,CAACC,YAAV,IAA0B,KAAKR,KAAL,CAAWQ,YAAzC,EAAuD;AACnD,WAAKC,QAAL,CAAe;AACXJ,QAAAA,OAAO,EAAE;AADE,OAAf;AAGH;AACJ,GAlBoC,CAmBrC;;;AACAF,EAAAA,oBAAoB,GAAG;AACnB,QAAIO,WAAW,GAAG,KAAKN,KAAL,CAAWC,OAA7B,CADmB,CAGnB;;AACAM,IAAAA,UAAU,CAAC,KAAKX,KAAL,CAAWY,SAAZ,EAAuB,CAAvB,EAA0B,KAAKR,KAAL,CAAWC,OAAX,GAAqB,CAA/C,CAAV;AACAK,IAAAA,WAAW;AACX,SAAKD,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAEK;AADC,KAAd;AAGH,GA7BoC,CA+BrC;;;AACAT,EAAAA,qBAAqB,GAAG;AACpB,QAAIS,WAAW,GAAG,KAAKN,KAAL,CAAWC,OAA7B,CADoB,CAGpB;;AACAM,IAAAA,UAAU,CAAC,KAAKX,KAAL,CAAWY,SAAZ,EAAuB,CAAvB,EAA0B,KAAKR,KAAL,CAAWC,OAAX,GAAqB,CAA/C,CAAV;;AACA,QAAIK,WAAW,GAAG,CAAlB,EAAqB;AACjBA,MAAAA,WAAW;AACd;;AACD,SAAKD,QAAL,CAAc;AACVJ,MAAAA,OAAO,EAAEK;AADC,KAAd;AAGH;;AAEDG,EAAAA,gBAAgB,GAAG;AACf,UAAM;AAACR,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,QAAIU,UAAU,GAAG,EAAjB;;AACA,QAAIT,OAAO,GAAG,CAAd,EAAiB;AACbS,MAAAA,UAAU,CAACC,IAAX,eACI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,KAAKd,qBAAtB;AAA6C,UAAA,KAAK,EAAC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;;AACD,WAAOa,UAAP;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAIF,UAAU,GAAG,KAAKD,gBAAL,EAAjB;AACA,wBACI;AAAA,iBACKC,UADL,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKX,oBAAtB;AAA4C,QAAA,KAAK,EAAC,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAvEoC;;AA0EzCN,UAAU,CAACoB,SAAX,GAAuB;AACnBT,EAAAA,YAAY,EAAEZ,SAAS,CAACsB,IAAV,CAAeC,UADV;AAEnBP,EAAAA,SAAS,EAAEhB,SAAS,CAACwB,IAAV,CAAeD;AAFP,CAAvB;AAKA,eAAetB,UAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport PropTypes from 'prop-types';\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handlePaginationMinus  =  this.handlePaginationMinus.bind(this);\n        this.handlePaginationPlus  = this.handlePaginationPlus.bind(this);\n        \n        this.state = {\n            curPage: 1,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.searchChange != this.props.searchChange) {\n            this.setState ({\n                curPage: 1,\n            });\n        }\n    }\n    //increment pageNum\n    handlePaginationPlus() {\n        let tempCurPage = this.state.curPage;\n\n        // so don't have to rely on setState updating quick enough and so don't have to return a explicit promist\n        setTimeout(this.props.fetchPics, 0, this.state.curPage + 1); \n        tempCurPage++;\n        this.setState({\n            curPage: tempCurPage,\n        });\n    }\n\n    //decrement pageNum\n    handlePaginationMinus() {\n        let tempCurPage = this.state.curPage;\n\n        // so don't have to rely on setState updating quick enough and so don't have to return a explicit promist\n        setTimeout(this.props.fetchPics, 0, this.state.curPage - 1);\n        if (tempCurPage > 1) {\n            tempCurPage--;\n        }\n        this.setState({\n            curPage: tempCurPage,\n        });\n    }\n\n    renderPrevButton() {\n        const {curPage} = this.state;\n        let prevButton = [];\n        if (curPage > 1) {\n            prevButton.push(\n                <span>\n                    <button onClick={this.handlePaginationMinus} class=\"button bottom\">\n                        go to previous page\n                    </button>\n                </span>\n            );\n        }\n        return prevButton;\n    }\n\n    render() {\n        let prevButton = this.renderPrevButton();\n        return (\n            <div>\n                {prevButton}\n                <button onClick={this.handlePaginationPlus} class=\"button bottom\"> \n                    go to next page\n                </button>\n            </div>\n\n        );\n    }\n}\n\nPagination.propTypes = {\n    searchChange: PropTypes.bool.isRequired,\n    fetchPics: PropTypes.func.isRequired,\n}\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}