{"ast":null,"code":"var _jsxFileName = \"/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/image.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Moveable from \"react-moveable\"; //import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import {faSearch} from '@fortawesome/free-solid-svg-icons';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      curText: \"\",\n      image_url: this.props.img\n    };\n  }\n\n  handleChange(e) {\n    console.log(\"inChange\");\n    e.preventDefault();\n    this.setState({\n      curText: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      curText,\n      image_url\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_url,\n          alt: \"selected_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"target\",\n        class: \"memeText\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"q\",\n          onChange: this.handleChange,\n          value: curText,\n          placeholder: \"type your text here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Moveable, {\n        target: document.getElementById(\"target\"),\n        resizable: resizable,\n        keepRatio: false,\n        throttleResize: 0,\n        renderDirections: [\"nw\", \"n\", \"ne\", \"w\", \"e\", \"sw\", \"s\", \"se\"],\n        edge: false,\n        zoom: 1,\n        origin: true,\n        padding: {\n          \"left\": 0,\n          \"top\": 0,\n          \"right\": 0,\n          \"bottom\": 0\n        },\n        onResizeStart: e => {\n          e.setOrigin([\"%\", \"%\"]);\n          e.dragStart && e.dragStart.set(frame.translate);\n        },\n        onResize: e => {\n          const beforeTranslate = e.drag.beforeTranslate;\n          frame.translate = beforeTranslate;\n          e.target.style.width = `${e.width}px`;\n          e.target.style.height = `${e.height}px`;\n          e.target.style.transform = `translate(${beforeTranslate[0]}px, ${beforeTranslate[1]}px)`;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nImage.propTypes = {\n  img: PropTypes.any.isRequired\n};\nexport default Image;","map":{"version":3,"sources":["/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/image.js"],"names":["React","PropTypes","Moveable","Image","Component","constructor","props","handleChange","bind","state","curText","image_url","img","e","console","log","preventDefault","setState","target","value","render","document","getElementById","resizable","setOrigin","dragStart","set","frame","translate","beforeTranslate","drag","style","width","height","transform","propTypes","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CACA;AACA;;;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWM;AAFb,KAAb;AAKH;;AAEDL,EAAAA,YAAY,CAACM,CAAD,EAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAF,IAAAA,CAAC,CAACG,cAAF;AACA,SAAKC,QAAL,CAAc;AACVP,MAAAA,OAAO,EAAEG,CAAC,CAACK,MAAF,CAASC;AADR,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACV,MAAAA,OAAD;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC;AAEA,wBACI;AAAA,8BACI;AAAA,gCACK;AAAA;AAAA;AAAA;AAAA,gBADL,eAEI;AAAK,UAAA,GAAG,EAAIE,SAAZ;AAAuB,UAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAM,QAAA,EAAE,EAAC,QAAT;AAAiB,QAAA,KAAK,EAAC,UAAvB;AAAA,+BACC;AACG,UAAA,IAAI,EAAC,MADR;AAEG,UAAA,IAAI,EAAC,GAFR;AAGG,UAAA,QAAQ,EAAE,KAAKJ,YAHlB;AAIG,UAAA,KAAK,EAAEG,OAJV;AAKG,UAAA,WAAW,EAAC;AALf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cANJ,eAeG,QAAC,QAAD;AACK,QAAA,MAAM,EAAEW,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADb;AAEK,QAAA,SAAS,EAAEC,SAFhB;AAGK,QAAA,SAAS,EAAE,KAHhB;AAIK,QAAA,cAAc,EAAE,CAJrB;AAKK,QAAA,gBAAgB,EAAE,CAAC,IAAD,EAAM,GAAN,EAAU,IAAV,EAAe,GAAf,EAAmB,GAAnB,EAAuB,IAAvB,EAA4B,GAA5B,EAAgC,IAAhC,CALvB;AAMK,QAAA,IAAI,EAAE,KANX;AAOK,QAAA,IAAI,EAAE,CAPX;AAQK,QAAA,MAAM,EAAE,IARb;AASK,QAAA,OAAO,EAAE;AAAC,kBAAO,CAAR;AAAU,iBAAM,CAAhB;AAAkB,mBAAQ,CAA1B;AAA4B,oBAAS;AAArC,SATd;AAUK,QAAA,aAAa,EAAEV,CAAC,IAAI;AAChBA,UAAAA,CAAC,CAACW,SAAF,CAAY,CAAC,GAAD,EAAM,GAAN,CAAZ;AACAX,UAAAA,CAAC,CAACY,SAAF,IAAeZ,CAAC,CAACY,SAAF,CAAYC,GAAZ,CAAgBC,KAAK,CAACC,SAAtB,CAAf;AACH,SAbN;AAcK,QAAA,QAAQ,EAAEf,CAAC,IAAI;AACX,gBAAMgB,eAAe,GAAGhB,CAAC,CAACiB,IAAF,CAAOD,eAA/B;AAEAF,UAAAA,KAAK,CAACC,SAAN,GAAkBC,eAAlB;AACAhB,UAAAA,CAAC,CAACK,MAAF,CAASa,KAAT,CAAeC,KAAf,GAAwB,GAAEnB,CAAC,CAACmB,KAAM,IAAlC;AACAnB,UAAAA,CAAC,CAACK,MAAF,CAASa,KAAT,CAAeE,MAAf,GAAyB,GAAEpB,CAAC,CAACoB,MAAO,IAApC;AACApB,UAAAA,CAAC,CAACK,MAAF,CAASa,KAAT,CAAeG,SAAf,GAA4B,aAAYL,eAAe,CAAC,CAAD,CAAI,OAAMA,eAAe,CAAC,CAAD,CAAI,KAApF;AACH;AArBN;AAAA;AAAA;AAAA;AAAA,cAfH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AAlE+B;;AAqEpC1B,KAAK,CAACgC,SAAN,GAAkB;AACdvB,EAAAA,GAAG,EAAEX,SAAS,CAACmC,GAAV,CAAcC;AADL,CAAlB;AAIA,eAAelC,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moveable from \"react-moveable\";\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import {faSearch} from '@fortawesome/free-solid-svg-icons';\n\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            curText: \"\",\n            image_url: this.props.img,\n        };\n\n    }\n\n    handleChange(e) {\n        console.log(\"inChange\"); \n        e.preventDefault();\n        this.setState({\n            curText: e.target.value,\n        });\n    }\n\n    render() {\n        const {curText,image_url} = this.state;\n        \n        return (\n            <div>\n                <div>\n                    {<br/>}\n                    <img src = {image_url} alt=\"selected_img\"/>\n                </div>\n\n                <form id=\"target\"class=\"memeText\">\n                 <input \n                    type=\"text\" \n                    name=\"q\" \n                    onChange={this.handleChange} \n                    value={curText}\n                    placeholder=\"type your text here\"/>\n                </form>\n\n               <Moveable\n                    target={document.getElementById(\"target\")}\n                    resizable={resizable}\n                    keepRatio={false}\n                    throttleResize={0}\n                    renderDirections={[\"nw\",\"n\",\"ne\",\"w\",\"e\",\"sw\",\"s\",\"se\"]}\n                    edge={false}\n                    zoom={1}\n                    origin={true}\n                    padding={{\"left\":0,\"top\":0,\"right\":0,\"bottom\":0}}\n                    onResizeStart={e => {\n                        e.setOrigin([\"%\", \"%\"]);\n                        e.dragStart && e.dragStart.set(frame.translate);\n                    }}\n                    onResize={e => {\n                        const beforeTranslate = e.drag.beforeTranslate;\n                \n                        frame.translate = beforeTranslate;\n                        e.target.style.width = `${e.width}px`;\n                        e.target.style.height = `${e.height}px`;\n                        e.target.style.transform = `translate(${beforeTranslate[0]}px, ${beforeTranslate[1]}px)`;\n                    }}\n            />\n            \n            </div>\n        );\n    }\n}\n\nImage.propTypes = {\n    img: PropTypes.any.isRequired,\n};\n\nexport default Image;"]},"metadata":{},"sourceType":"module"}