{"ast":null,"code":"var _jsxFileName = \"/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/help.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Help extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleHelp = this.handleHelp.bind(this);\n    this.state = {\n      needHelp: false\n    };\n  }\n\n  handleHelp() {\n    let temp_help = this.state.needHelp;\n    this.setState({\n      needHelp: !temp_help\n    });\n  }\n\n  renrHelp() {\n    const {\n      needHelp\n    } = this.state;\n    let helpMenu = [];\n\n    if (needHelp) {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleHelp,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimesCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"centerRules\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" RULES: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"caption\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Author a Meme Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Generate them by \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 39\n              }, this), \"1) searching for a picture \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 49\n              }, this), \"2) selecting a picture \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 45\n              }, this), \"3) telling us what words you want to put on your picture \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 79\n              }, this), \"4) (optional:) click the download button to download your meme) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 86\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), \"Good luck! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"button\", {\n        onClick: this.handleHelp,\n        \"font-size\": \"12\",\n        children: \"How to Use the Meme Generator 2000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Help;","map":{"version":3,"sources":["/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/help.js"],"names":["React","FontAwesomeIcon","faTimesCircle","Help","Component","constructor","props","handleHelp","bind","state","needHelp","temp_help","setState","renrHelp","helpMenu","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAQC,aAAR,QAA4B,mCAA5B;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC;AADA,KAAb;AAGH;;AAEDH,EAAAA,UAAU,GAAG;AACT,QAAII,SAAS,GAAG,KAAKF,KAAL,CAAWC,QAA3B;AACA,SAAKE,QAAL,CAAc;AACVF,MAAAA,QAAQ,EAAE,CAACC;AADD,KAAd;AAGH;;AAEDE,EAAAA,QAAQ,GAAG;AACP,UAAM;AAACH,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACA,QAAIK,QAAQ,GAAG,EAAf;;AACA,QAAIJ,QAAJ,EAAc;AACV;AAAA;AAAA,+BACA;AAAA,kCACE;AAAA,oCACE;AAAQ,cAAA,OAAO,EAAE,KAAKH,UAAtB;AAAA,qCACI,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEL;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAM,cAAA,KAAK,EAAC,aAAZ;AAAA,qCAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAM,YAAA,KAAK,EAAC,SAAZ;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA,2DACsB;AAAA;AAAA;AAAA;AAAA,sBADtB,8CAEgC;AAAA;AAAA;AAAA;AAAA,sBAFhC,0CAG4B;AAAA;AAAA;AAAA;AAAA,sBAH5B,4EAI8D;AAAA;AAAA;AAAA;AAAA,sBAJ9D,mFAKqE;AAAA;AAAA;AAAA;AAAA,sBALrE;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,8BAmBgB;AAAA;AAAA;AAAA;AAAA,kBAnBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAwBH,KAzBD,MAyBO;AACH;AAAA;AAAQ,QAAA,OAAO,EAAE,KAAKK,UAAtB;AAAkC,qBAAU,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIH;AAEJ;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7D8B;;AAgEnC,eAAeZ,IAAf","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\nclass Help extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleHelp = this.handleHelp.bind(this);\n\n        this.state = {\n            needHelp:false,\n        };\n    }\n\n    handleHelp() {\n        let temp_help = this.state.needHelp;\n        this.setState({\n            needHelp: !temp_help,\n        });\n    }\n\n    renrHelp() {\n        const {needHelp} = this.state;\n        let helpMenu = []\n        if (needHelp) {\n            <div>\n            <div>\n              <div>\n                <button onClick={this.handleHelp}>\n                    <FontAwesomeIcon icon={faTimesCircle}/>\n                </button>\n                <span class=\"centerRules\"><b> RULES: </b></span>\n              </div>\n              <span class=\"caption\">\n                <h1> \n                    Author a Meme Today\n                </h1>\n                <h3>\n                    Generate them by {<br/>}\n                    1) searching for a picture {<br/>}\n                    2) selecting a picture {<br/>}\n                    3) telling us what words you want to put on your picture {<br/>}\n                    4) (optional:) click the download button to download your meme) {<br/>}\n                </h3>\n              </span>\n                Good luck! {<br/>}\n            </div>\n          </div>\n\n        } else {\n            <button onClick={this.handleHelp} font-size=\"12\">\n            How to Use the Meme Generator 2000\n            {/*<FontAwesomeIcon icon={//faQuestion} />*/}\n          </button>\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}\n\nexport default Help;"]},"metadata":{},"sourceType":"module"}