{"ast":null,"code":"import React from 'react';\nimport './index.css'; //classless file, just used to fetch from flickr api\n\nfunction createUrl(pageNum, curQuery) {\n  let FLICKR_API_KEY = \"127eb5c6066070b6ef6203c9d9a89dd8\"; // got from flickr api account webpage\n\n  const urlRoot = \"https://api.flickr.com/services/rest/\";\n  const method = \"?method=flickr.photos.search\";\n  const apikey = \"&api_key=\" + FLICKR_API_KEY;\n  const text = \"&text=\" + curQuery;\n  const sort = \"&sort=relevance\";\n  const safe = \"&safe_search=1\"; // safe search is on\n\n  const format = \"&per_page=12&format=json&nojsoncallback=1\";\n  const page = \"&page=\" + pageNum;\n  const url = urlRoot + method + apikey + sort + safe + page + text + format;\n  return url;\n} // queries flickr api according to page number and current query\n\n\nfunction fetchPics(pageNum, curQuery) {\n  let picArray = [];\n\n  if (curQuery !== undefined && curQuery !== \"\") {\n    let url = createUrl(pageNum, curQuery);\n    fetch(url).then(response => {\n      if (!response.ok) throw Error(response.statusText);\n      return response.json();\n    }).then(j => {\n      //loop through all pictures from search\n      j.photos.photo.forEach(pic => {\n        //copied from flickr's documentation, get location of pictures\n        var srcPath = 'https://farm' + pic.farm + '.staticflickr.com/' + pic.server + '/' + pic.id + '_' + pic.secret + '.jpg';\n        picArray.append(srcPath);\n      });\n    }).then(error => {\n      console.log(\"ERROR:\", error);\n    });\n  }\n\n  console.log(picArray);\n  return picArray;\n}\n\nexport { fetchPics };","map":{"version":3,"sources":["/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/query.js"],"names":["React","createUrl","pageNum","curQuery","FLICKR_API_KEY","urlRoot","method","apikey","text","sort","safe","format","page","url","fetchPics","picArray","undefined","fetch","then","response","ok","Error","statusText","json","j","photos","photo","forEach","pic","srcPath","farm","server","id","secret","append","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4BC,QAA5B,EAAsC;AAElC,MAAIC,cAAc,GAAG,kCAArB,CAFkC,CAEuB;;AAEzD,QAAMC,OAAO,GAAG,uCAAhB;AACA,QAAMC,MAAM,GAAG,8BAAf;AACA,QAAMC,MAAM,GAAG,cAAaH,cAA5B;AACA,QAAMI,IAAI,GAAG,WAAWL,QAAxB;AACA,QAAMM,IAAI,GAAG,iBAAb;AACA,QAAMC,IAAI,GAAG,gBAAb,CATkC,CASH;;AAC/B,QAAMC,MAAM,GAAG,2CAAf;AACA,QAAMC,IAAI,GAAG,WAAWV,OAAxB;AACA,QAAMW,GAAG,GAAGR,OAAO,GAAGC,MAAV,GAAmBC,MAAnB,GAA4BE,IAA5B,GAAmCC,IAAnC,GAA0CE,IAA1C,GAAiDJ,IAAjD,GAAuDG,MAAnE;AAEA,SAAOE,GAAP;AACH,C,CAED;;;AACA,SAASC,SAAT,CAAmBZ,OAAnB,EAA4BC,QAA5B,EAAsC;AAClC,MAAIY,QAAQ,GAAG,EAAf;;AACA,MAAIZ,QAAQ,KAAKa,SAAb,IAA0Bb,QAAQ,KAAK,EAA3C,EAA+C;AAE3C,QAAIU,GAAG,GAAGZ,SAAS,CAACC,OAAD,EAAUC,QAAV,CAAnB;AACAc,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACKK,IADL,CACWC,QAAD,IAAc;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB,MAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AAClB,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KAJL,EAKKL,IALL,CAKWM,CAAD,IAAM;AACR;AACAA,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAwBC,GAAD,IAAS;AAC5B;AACA,YAAIC,OAAO,GAAG,iBAAeD,GAAG,CAACE,IAAnB,GAAyB,oBAAzB,GACEF,GAAG,CAACG,MADN,GACa,GADb,GACiBH,GAAG,CAACI,EADrB,GACwB,GADxB,GAC4BJ,GAAG,CAACK,MADhC,GACuC,MADrD;AAEAlB,QAAAA,QAAQ,CAACmB,MAAT,CAAgBL,OAAhB;AACH,OALD;AAMH,KAbL,EAcKX,IAdL,CAcWiB,KAAD,IAAW;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACH,KAhBL;AAiBH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACA,SAAOA,QAAP;AACH;;AAED,SAAQD,SAAR","sourcesContent":["import React from 'react';\nimport './index.css';\n\n//classless file, just used to fetch from flickr api\n\nfunction createUrl(pageNum, curQuery) {\n\n    let FLICKR_API_KEY = \"127eb5c6066070b6ef6203c9d9a89dd8\"; // got from flickr api account webpage\n\n    const urlRoot = \"https://api.flickr.com/services/rest/\";\n    const method = \"?method=flickr.photos.search\";\n    const apikey = \"&api_key=\"+ FLICKR_API_KEY;\n    const text = \"&text=\" + curQuery;\n    const sort = \"&sort=relevance\"; \n    const safe = \"&safe_search=1\"; // safe search is on\n    const format = \"&per_page=12&format=json&nojsoncallback=1\";\n    const page = \"&page=\" + pageNum;\n    const url = urlRoot + method + apikey + sort + safe + page + text+ format;\n\n    return url;\n}\n\n// queries flickr api according to page number and current query\nfunction fetchPics(pageNum, curQuery) {\n    let picArray = [];\n    if (curQuery !== undefined && curQuery !== \"\") {\n    \n        let url = createUrl(pageNum, curQuery);\n        fetch(url)\n            .then((response) => {\n                if (!response.ok) throw Error(response.statusText);\n                return response.json();\n            })\n            .then((j) =>{\n                //loop through all pictures from search\n                j.photos.photo.forEach((pic) => {\n                    //copied from flickr's documentation, get location of pictures\n                    var srcPath = 'https://farm'+pic.farm+ '.staticflickr.com/'+\n                                    pic.server+'/'+pic.id+'_'+pic.secret+'.jpg';\n                    picArray.append(srcPath);\n                })\n            })\n            .then((error) => {\n                console.log(\"ERROR:\", error);\n            })\n    }\n    console.log(picArray);\n    return picArray;\n}\n\nexport {fetchPics};"]},"metadata":{},"sourceType":"module"}