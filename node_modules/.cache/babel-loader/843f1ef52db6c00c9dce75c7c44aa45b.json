{"ast":null,"code":"var _jsxFileName = \"/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/query.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      search: \"\",\n      curQuery: \"\",\n      pictures: []\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      search: curQuery\n    });\n    const {\n      curQuery,\n      search\n    } = this.state;\n    console.log(\"inSubmit\");\n\n    if (search !== \"\") {\n      let FLICKR_API_KEY = \"127eb5c6066070b6ef6203c9d9a89dd8\";\n      fetch(\"https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=\" + FLICKR_API_KEY + \"&tags=\" + search + \"&per_page=10&page=1&format=json&nojsoncallback=1\").then(response => {\n        if (!response.ok) throw Error(response.statusText);\n        return response.json();\n      }).then(j => {\n        console.log(\"IN DATA\");\n        alert(JSON.stringify(j)); //loop through all pictures from search\n\n        let picArray = j.photos.photo.map(pic => {\n          //copied from flickr's documentation, get location of pictures\n          var srcPath = 'https://farm' + pic.farm + '.staticflickr.com/' + pic.server + '/' + pic.id + '_' + pic.secret + '.jpg';\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: search,\n            src: srcPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this);\n        });\n        this.setState({\n          pictures: picArray\n        });\n      }).then(error => {\n        console.log(\"ERROR:\", error);\n      });\n    } else {}\n  }\n\n  handleChange(e) {\n    console.log(\"inChange\");\n    e.preventDefault();\n\n    if (e.target.value !== \"\") {\n      this.setState({\n        curQuery: e.target.value\n      });\n    }\n  }\n\n  render() {\n    const {\n      curQuery,\n      pictures,\n      search\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleChange,\n            value: curQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleSubmit,\n            type: \"submit\",\n            children: \" Search! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Pictures of \", curQuery, \": \", pictures]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Query;","map":{"version":3,"sources":["/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/query.js"],"names":["React","Query","Component","constructor","props","handleSubmit","bind","handleChange","state","search","curQuery","pictures","e","preventDefault","setState","console","log","FLICKR_API_KEY","fetch","then","response","ok","Error","statusText","json","j","alert","JSON","stringify","picArray","photos","photo","map","pic","srcPath","farm","server","id","secret","error","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Query extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            search: \"\",\n            curQuery: \"\",\n            pictures: [],\n        };\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            search: curQuery,\n        })\n        const {curQuery, search} = this.state;\n        console.log(\"inSubmit\");\n        if (search !== \"\") {\n            let FLICKR_API_KEY = \"127eb5c6066070b6ef6203c9d9a89dd8\";\n            fetch(\"https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=\"+ FLICKR_API_KEY +  \"&tags=\" + search + \"&per_page=10&page=1&format=json&nojsoncallback=1\")\n                .then((response) => {\n                    if (!response.ok) throw Error(response.statusText);\n                    return response.json();\n                })\n                .then((j) =>{\n                    console.log(\"IN DATA\");\n                    alert(JSON.stringify(j));\n                    //loop through all pictures from search\n                    let picArray = j.photos.photo.map((pic) => {\n                        //copied from flickr's documentation, get location of pictures\n                        var srcPath = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'.jpg';\n                        return(\n                            <img alt={search} src={srcPath}></img>\n                        )\n                    })\n                    this.setState({ \n                        pictures: picArray,\n                    });\n                })\n                .then((error) => {\n                    console.log(\"ERROR:\", error);\n                })\n        } else {\n            \n        }\n\n        \n    }\n\n    handleChange(e) {\n        console.log(\"inChange\"); \n        e.preventDefault();\n        if (e.target.value !== \"\") {\n            this.setState({\n                curQuery: e.target.value,\n            });\n        }\n    }\n\n    render() {\n        const {curQuery, pictures, search} = this.state;\n        console.log(this.state);\n        return (\n            <div>\n                <div>\n                    <form>\n                        <input type=\"text\" onChange={this.handleChange} value={curQuery}/>\n                        <button onClick={this.handleSubmit} type=\"submit\"> Search! </button>\n                    </form>\n                </div>\n                <div>\n                    Pictures of {curQuery}: {pictures}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Query;"]},"metadata":{},"sourceType":"module"}