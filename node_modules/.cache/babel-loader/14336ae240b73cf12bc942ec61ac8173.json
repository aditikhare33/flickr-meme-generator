{"ast":null,"code":"var _jsxFileName = \"/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/query.js\";\nimport React from 'react';\nimport './index.css';\nimport Image from './image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Query extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.fetchPics = this.fetchPics.bind(this);\n    this.state = {\n      curQuery: \"\",\n      pictures: [],\n      selected: NaN,\n      selectionHappened: false\n    };\n  }\n\n  fetchPics(page_num, query) {\n    console.log(\"FETCHING\");\n    let {\n      curQuery\n    } = this.state;\n    let FLICKR_API_KEY = \"127eb5c6066070b6ef6203c9d9a89dd8\"; // got from flickr api account webpage\n\n    const urlRoot = \"https://api.flickr.com/services/rest/\";\n    const method = \"?method=flickr.photos.search\";\n    const apikey = \"&api_key=\" + FLICKR_API_KEY;\n    const text = \"&text=\" + query;\n    const tags = \"&tags=\" + \"memes\";\n    const sort = \"&sort=relevance\";\n    const safe = \"&safe_search=1\"; // safe search is on\n\n    const format = \"&per_page=12&format=json&nojsoncallback=1\";\n    const page = \"&page=\" + page;\n    const url = urlRoot + method + apikey + sort + safe + text + format;\n    console.log(\"querying this url:\", url);\n    fetch(url).then(response => {\n      if (!response.ok) throw Error(response.statusText);\n      return response.json();\n    }).then(j => {\n      console.log(\"IN DATA\"); //loop through all pictures from search\n\n      let picArray = j.photos.photo.map(pic => {\n        //copied from flickr's documentation, get location of pictures\n        var srcPath = 'https://farm' + pic.farm + '.staticflickr.com/' + pic.server + '/' + pic.id + '_' + pic.secret + '.jpg';\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"picture\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"searchImg\",\n            alt: curQuery,\n            src: srcPath,\n            onDoubleClick: this.handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this);\n      });\n      this.setState({\n        pictures: picArray\n      });\n    }).then(error => {\n      console.log(\"ERROR:\", error);\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"inSubmit\");\n    const {\n      curQuery\n    } = this.state.curQuery;\n\n    if (curQuery !== \"\") {\n      this.fetchPics(1, curQuery);\n    }\n  }\n\n  handleChange(e) {\n    console.log(\"inChange\");\n    e.preventDefault();\n    this.setState({\n      curQuery: e.target.value\n    });\n  }\n\n  handleSelect(e) {\n    e.preventDefault();\n    let src_path = e.target.getAttribute(\"src\");\n    console.log(\"src_path\", src_path);\n    this.setState({\n      selected: src_path,\n      selectionHappened: true\n    });\n  }\n\n  renderHelper() {\n    const {\n      curQuery,\n      pictures,\n      selected,\n      selectionHappened\n    } = this.state;\n    let output = [];\n\n    if (selectionHappened) {\n      output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          img: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this));\n    } else {\n      output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"q\",\n              onChange: this.handleChange,\n              value: curQuery,\n              placeholder: \"Search...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"sideButton\",\n              onSubmit: this.handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), \"Here are some pictures of \", curQuery, \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"board\",\n          children: pictures\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this));\n    }\n\n    return output;\n  }\n\n  render() {\n    let output = this.renderHelper();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Query;","map":{"version":3,"sources":["/Users/aditikhare/Desktop/flickr-meme-generator/flickr-meme-generator/src/query.js"],"names":["React","Image","FontAwesomeIcon","faSearch","Query","Component","constructor","props","handleSubmit","bind","handleChange","handleSelect","fetchPics","state","curQuery","pictures","selected","NaN","selectionHappened","page_num","query","console","log","FLICKR_API_KEY","urlRoot","method","apikey","text","tags","sort","safe","format","page","url","fetch","then","response","ok","Error","statusText","json","j","picArray","photos","photo","map","pic","srcPath","farm","server","id","secret","setState","error","e","preventDefault","target","value","src_path","getAttribute","renderHelper","output","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Image from './image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\n\nclass Query extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.fetchPics = this.fetchPics.bind(this);\n\n        this.state = {\n            curQuery: \"\",\n            pictures: [],\n            selected: NaN,\n            selectionHappened: false,\n        };\n    }\n\n    fetchPics(page_num, query) {\n        console.log(\"FETCHING\");\n        let {curQuery} = this.state;\n        let FLICKR_API_KEY = \"127eb5c6066070b6ef6203c9d9a89dd8\"; // got from flickr api account webpage\n        const urlRoot = \"https://api.flickr.com/services/rest/\";\n        const method = \"?method=flickr.photos.search\";\n        const apikey = \"&api_key=\"+ FLICKR_API_KEY;\n        const text = \"&text=\" + query;\n        const tags =  \"&tags=\" + \"memes\";\n        const sort = \"&sort=relevance\"; \n        const safe = \"&safe_search=1\"; // safe search is on\n        const format = \"&per_page=12&format=json&nojsoncallback=1\";\n        const page = \"&page=\" + page;\n        const url = urlRoot + method + apikey + sort + safe + text + format;\n        console.log(\"querying this url:\", url);\n        fetch(url)\n            .then((response) => {\n                if (!response.ok) throw Error(response.statusText);\n                return response.json();\n            })\n            .then((j) =>{\n                console.log(\"IN DATA\");\n                //loop through all pictures from search\n                let picArray = j.photos.photo.map((pic) => {\n                    //copied from flickr's documentation, get location of pictures\n                    var srcPath = 'https://farm'+pic.farm+'.staticflickr.com/'+pic.server+'/'+pic.id+'_'+pic.secret+'.jpg';\n                    return(\n                        <span class=\"picture\">\n                            <img \n                                class=\"searchImg\"\n                                alt={curQuery} \n                                src={srcPath} \n                                onDoubleClick={this.handleSelect}\n                            />\n                        </span>\n                    )\n                })\n                this.setState({ \n                    pictures: picArray,\n                });\n            })\n            .then((error) => {\n                console.log(\"ERROR:\", error);\n            })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"inSubmit\");\n        const {curQuery} = this.state.curQuery;\n        if (curQuery !== \"\") {\n            this.fetchPics(1, curQuery);\n        }   \n    }\n\n    handleChange(e) {\n        console.log(\"inChange\"); \n        e.preventDefault();\n        this.setState({\n            curQuery: e.target.value,\n        });\n    }\n\n    handleSelect(e) {\n        e.preventDefault();\n        let src_path = e.target.getAttribute(\"src\");\n        console.log(\"src_path\", src_path);\n        this.setState({\n            selected: src_path,\n            selectionHappened: true,\n        });\n    }\n\n    renderHelper() {\n        const {curQuery, pictures, selected, selectionHappened} = this.state;\n        let output = [];\n\n        if (selectionHappened) {\n            output.push(\n                <div>\n                    <Image img={selected} />\n                </div>\n            );\n        } else {\n            output.push(\n                <div>\n                    <div class=\"button\">\n                        <form onSubmit={this.handleSubmit}>\n                            <input \n                                type=\"text\" \n                                name=\"q\" \n                                onChange={this.handleChange} \n                                value={curQuery}\n                                placeholder=\"Search...\"\n                            />\n                            <button class=\"sideButton\" onSubmit={this.handleSubmit}>\n                                <FontAwesomeIcon icon={faSearch}/> \n                            </button>\n                        </form>\n                    </div>\n                    Here are some pictures of {curQuery}: {<br/>}\n                    <div class=\"board\">\n                        {pictures}\n                    </div>\n                </div>\n            );\n        }\n        return output;\n    }\n\n    render() {\n        let output = this.renderHelper();\n        return (\n            <div>\n                {output}\n            </div>\n        );\n    }\n}\n\nexport default Query;"]},"metadata":{},"sourceType":"module"}